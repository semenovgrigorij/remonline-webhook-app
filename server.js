const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");
require("dotenv").config();

const app = express();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ª—É—á—à–µ —Ö—Ä–∞–Ω–∏—Ç—å –≤ .env)
const TELEGRAM_TOKEN =
  process.env.TELEGRAM_TOKEN ||
  "8026606898:AAEcpb8avNsTWe8ehwDVsAF-sKy3WiYKfwg";
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID || "1316558920";
const WEBHOOK_SECRET = process.env.WEBHOOK_SECRET || "VSBpuxhNp0U5HywNSFZ";

app.use(bodyParser.json());

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
app.get("/", (req, res) => {
  res.status(200).send("–í–µ–±—Ö—É–∫ –¥–ª—è Remonline —Ä–∞–±–æ—Ç–∞–µ—Ç!");
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞
app.post("/webhook", async (req, res) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
    const incomingSecret = req.headers["x-secret-key"];
    if (incomingSecret !== WEBHOOK_SECRET) {
      console.warn("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á");
      return res.status(403).send("Forbidden");
    }

    console.log("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", {
      headers: req.headers,
      body: req.body,
    });
    const event = req.body;

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    let message = "";
    switch (event.event_type) {
      case "order_created":
        message = `üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: ${event.order_id}\n–ö–ª–∏–µ–Ω—Ç: ${event.client_name}`;
        break;
      case "order_status_changed":
        message = `üîÑ –ò–∑–º–µ–Ω–µ–Ω —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ${event.order_id}\n–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${event.new_status}`;
        break;
      // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —Å–æ–±—ã—Ç–∏—è –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏
    }

    if (message) {
      await sendTelegramMessage(message);
    }

    res.status(200).send("OK");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞:", error);
    res.status(500).send("Internal Server Error");
  }
});

app.get("/test", (req, res) => {
  sendTelegramMessage("–¢–µ—Å—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
    .then(() => res.send("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"))
    .catch((err) => res.status(500).send("–û—à–∏–±–∫–∞: " + err.message));
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(text) {
  try {
    const url = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;
    await axios.post(url, {
      chat_id: TELEGRAM_CHAT_ID,
      text: text,
      parse_mode: "Markdown",
    });
    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
  } catch (error) {
    console.error(
      "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:",
      error.response?.data || error.message
    );
    throw error;
  }
}

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
